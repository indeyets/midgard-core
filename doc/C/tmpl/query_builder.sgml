<!-- ##### SECTION Title ##### -->
midgard_query_builder

<!-- ##### SECTION Short_Description ##### -->
Database object query

<!-- ##### SECTION Long_Description ##### -->
<para>
The #MidgardQueryBuilder allows an application to construct and execute
queries against any database, which Midgard is connected to.  
</para>

<para>
Main #MidgardQueryBuilder conveniences:
<itemizedlist>
<listitem><para>
It doesn't require any SQL 
</para></listitem>
<listitem><para>
Object properties are used as query constraints
</para></listitem>
<listitem><para>
Objects' array is returned instead of raw records
</para></listitem>
</itemizedlist>
</para>

<para>
The main steps of using the query builder are:
<itemizedlist>
<listitem><para>
create a query builder instance, midgard_query_builder_new()
</para></listitem>
<listitem><para>
add constraints and other options to the query, midgard_query_builder_add_constraint()
</para></listitem>
<listitem><para>
execute the query, midgard_query_builder_execute()
</para></listitem>
</itemizedlist>
</para>

<para>
Each query is represented by an instance of the #MidgardQueryBuilderClass class.
The #MidgardQueryBuilder methods can be used to manipulate  the queries.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT MidgardQueryBuilder ##### -->
<para>

</para>

@parent: 
@priv: 

<!-- ##### TYPEDEF midgard_query_builder ##### -->
<para>

</para>


<!-- ##### STRUCT MidgardQueryBuilderPrivate ##### -->
<para>

</para>

@constraints: 
@groups: 
@is_grouping: 
@grouping_ref: 
@group_constraint: 
@joins: 
@tables: 
@orders: 
@value: 
@mgd: 
@schema: 
@type: 
@offset: 
@limit: 
@include_deleted: 
@select_distinct: 
@error: 
@param_join_exists: 
@blob_join_exists: 

<!-- ##### TYPEDEF MidgardQueryBuilderClass ##### -->
<para>

</para>


<!-- ##### FUNCTION midgard_query_builder_new ##### -->
<para>

</para>

@mgd: 
@classname: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_add_constraint ##### -->
<para>

</para>

@builder: 
@name: 
@op: 
@value: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_add_constraint_with_property ##### -->
<para>

</para>

@builder: 
@property_a: 
@op: 
@property_b: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_begin_group ##### -->
<para>

</para>

@builder: 
@type: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_end_group ##### -->
<para>

</para>

@builder: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_add_order ##### -->
<para>

</para>

@builder: 
@name: 
@dir: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_set_offset ##### -->
<para>

</para>

@builder: 
@offset: 


<!-- ##### FUNCTION midgard_query_builder_set_limit ##### -->
<para>

</para>

@builder: 
@limit: 


<!-- ##### FUNCTION midgard_query_builder_execute ##### -->
<para>

</para>

@builder: 
@n_objects: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_count ##### -->
<para>

</para>

@builder: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_get_type_name ##### -->
<para>

</para>

@builder: 
@Returns: 


<!-- ##### FUNCTION midgard_query_builder_include_deleted ##### -->
<para>

</para>

@builder: 


