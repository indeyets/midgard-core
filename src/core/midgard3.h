/* midgard3.h generated by valac 0.10.0, the Vala compiler, do not modify */


#ifndef ________SRC_CORE_MIDGARD3_H__
#define ________SRC_CORE_MIDGARD3_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define MIDGARD_CR_TYPE_CONFIG (midgard_cr_config_get_type ())
#define MIDGARD_CR_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_CONFIG, MidgardCRConfig))
#define MIDGARD_CR_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_CONFIG, MidgardCRConfigClass))
#define MIDGARD_CR_IS_CONFIG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_CONFIG))
#define MIDGARD_CR_IS_CONFIG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_CONFIG))
#define MIDGARD_CR_CONFIG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_CONFIG, MidgardCRConfigClass))

typedef struct _MidgardCRConfig MidgardCRConfig;
typedef struct _MidgardCRConfigClass MidgardCRConfigClass;
typedef struct _MidgardCRConfigPrivate MidgardCRConfigPrivate;

#define MIDGARD_CR_TYPE_EXECUTABLE (midgard_cr_executable_get_type ())
#define MIDGARD_CR_EXECUTABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_EXECUTABLE, MidgardCRExecutable))
#define MIDGARD_CR_IS_EXECUTABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_EXECUTABLE))
#define MIDGARD_CR_EXECUTABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_EXECUTABLE, MidgardCRExecutableIface))

typedef struct _MidgardCRExecutable MidgardCRExecutable;
typedef struct _MidgardCRExecutableIface MidgardCRExecutableIface;

#define MIDGARD_CR_TYPE_NAMESPACE_MANAGER (midgard_cr_namespace_manager_get_type ())
#define MIDGARD_CR_NAMESPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_NAMESPACE_MANAGER, MidgardCRNamespaceManager))
#define MIDGARD_CR_IS_NAMESPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_NAMESPACE_MANAGER))
#define MIDGARD_CR_NAMESPACE_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_NAMESPACE_MANAGER, MidgardCRNamespaceManagerIface))

typedef struct _MidgardCRNamespaceManager MidgardCRNamespaceManager;
typedef struct _MidgardCRNamespaceManagerIface MidgardCRNamespaceManagerIface;

#define MIDGARD_CR_TYPE_PROFILER (midgard_cr_profiler_get_type ())
#define MIDGARD_CR_PROFILER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_PROFILER, MidgardCRProfiler))
#define MIDGARD_CR_IS_PROFILER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_PROFILER))
#define MIDGARD_CR_PROFILER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_PROFILER, MidgardCRProfilerIface))

typedef struct _MidgardCRProfiler MidgardCRProfiler;
typedef struct _MidgardCRProfilerIface MidgardCRProfilerIface;

#define MIDGARD_CR_TYPE_SQL_PROFILER (midgard_cr_sql_profiler_get_type ())
#define MIDGARD_CR_SQL_PROFILER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_PROFILER, MidgardCRSQLProfiler))
#define MIDGARD_CR_SQL_PROFILER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_PROFILER, MidgardCRSQLProfilerClass))
#define MIDGARD_CR_IS_SQL_PROFILER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_PROFILER))
#define MIDGARD_CR_IS_SQL_PROFILER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_PROFILER))
#define MIDGARD_CR_SQL_PROFILER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_PROFILER, MidgardCRSQLProfilerClass))

typedef struct _MidgardCRSQLProfiler MidgardCRSQLProfiler;
typedef struct _MidgardCRSQLProfilerClass MidgardCRSQLProfilerClass;
typedef struct _MidgardCRSQLProfilerPrivate MidgardCRSQLProfilerPrivate;

#define MIDGARD_CR_TYPE_QUERY_CONSTRAINT_SIMPLE (midgard_cr_query_constraint_simple_get_type ())
#define MIDGARD_CR_QUERY_CONSTRAINT_SIMPLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_SIMPLE, MidgardCRQueryConstraintSimple))
#define MIDGARD_CR_IS_QUERY_CONSTRAINT_SIMPLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_SIMPLE))
#define MIDGARD_CR_QUERY_CONSTRAINT_SIMPLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_SIMPLE, MidgardCRQueryConstraintSimpleIface))

typedef struct _MidgardCRQueryConstraintSimple MidgardCRQueryConstraintSimple;
typedef struct _MidgardCRQueryConstraintSimpleIface MidgardCRQueryConstraintSimpleIface;

#define MIDGARD_CR_TYPE_QUERY_STORAGE (midgard_cr_query_storage_get_type ())
#define MIDGARD_CR_QUERY_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_STORAGE, MidgardCRQueryStorage))
#define MIDGARD_CR_IS_QUERY_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_STORAGE))
#define MIDGARD_CR_QUERY_STORAGE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_STORAGE, MidgardCRQueryStorageIface))

typedef struct _MidgardCRQueryStorage MidgardCRQueryStorage;
typedef struct _MidgardCRQueryStorageIface MidgardCRQueryStorageIface;

#define MIDGARD_CR_TYPE_QUERY_CONSTRAINT (midgard_cr_query_constraint_get_type ())
#define MIDGARD_CR_QUERY_CONSTRAINT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT, MidgardCRQueryConstraint))
#define MIDGARD_CR_IS_QUERY_CONSTRAINT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT))
#define MIDGARD_CR_QUERY_CONSTRAINT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT, MidgardCRQueryConstraintIface))

typedef struct _MidgardCRQueryConstraint MidgardCRQueryConstraint;
typedef struct _MidgardCRQueryConstraintIface MidgardCRQueryConstraintIface;

#define MIDGARD_CR_TYPE_QUERY_VALUE_HOLDER (midgard_cr_query_value_holder_get_type ())
#define MIDGARD_CR_QUERY_VALUE_HOLDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_VALUE_HOLDER, MidgardCRQueryValueHolder))
#define MIDGARD_CR_IS_QUERY_VALUE_HOLDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_VALUE_HOLDER))
#define MIDGARD_CR_QUERY_VALUE_HOLDER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_VALUE_HOLDER, MidgardCRQueryValueHolderIface))

typedef struct _MidgardCRQueryValueHolder MidgardCRQueryValueHolder;
typedef struct _MidgardCRQueryValueHolderIface MidgardCRQueryValueHolderIface;

#define MIDGARD_CR_TYPE_QUERY_PROPERTY (midgard_cr_query_property_get_type ())
#define MIDGARD_CR_QUERY_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_PROPERTY, MidgardCRQueryProperty))
#define MIDGARD_CR_QUERY_PROPERTY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_QUERY_PROPERTY, MidgardCRQueryPropertyClass))
#define MIDGARD_CR_IS_QUERY_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_PROPERTY))
#define MIDGARD_CR_IS_QUERY_PROPERTY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_QUERY_PROPERTY))
#define MIDGARD_CR_QUERY_PROPERTY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_QUERY_PROPERTY, MidgardCRQueryPropertyClass))

typedef struct _MidgardCRQueryProperty MidgardCRQueryProperty;
typedef struct _MidgardCRQueryPropertyClass MidgardCRQueryPropertyClass;

#define MIDGARD_CR_TYPE_QUERY_CONSTRAINT_GROUP (midgard_cr_query_constraint_group_get_type ())
#define MIDGARD_CR_QUERY_CONSTRAINT_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_GROUP, MidgardCRQueryConstraintGroup))
#define MIDGARD_CR_IS_QUERY_CONSTRAINT_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_GROUP))
#define MIDGARD_CR_QUERY_CONSTRAINT_GROUP_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_CONSTRAINT_GROUP, MidgardCRQueryConstraintGroupIface))

typedef struct _MidgardCRQueryConstraintGroup MidgardCRQueryConstraintGroup;
typedef struct _MidgardCRQueryConstraintGroupIface MidgardCRQueryConstraintGroupIface;

#define MIDGARD_CR_TYPE_QUERY_EXECUTOR (midgard_cr_query_executor_get_type ())
#define MIDGARD_CR_QUERY_EXECUTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_EXECUTOR, MidgardCRQueryExecutor))
#define MIDGARD_CR_IS_QUERY_EXECUTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_EXECUTOR))
#define MIDGARD_CR_QUERY_EXECUTOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_EXECUTOR, MidgardCRQueryExecutorIface))

typedef struct _MidgardCRQueryExecutor MidgardCRQueryExecutor;
typedef struct _MidgardCRQueryExecutorIface MidgardCRQueryExecutorIface;

#define MIDGARD_CR_TYPE_QUERY_SELECT (midgard_cr_query_select_get_type ())
#define MIDGARD_CR_QUERY_SELECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_SELECT, MidgardCRQuerySelect))
#define MIDGARD_CR_IS_QUERY_SELECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_SELECT))
#define MIDGARD_CR_QUERY_SELECT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_SELECT, MidgardCRQuerySelectIface))

typedef struct _MidgardCRQuerySelect MidgardCRQuerySelect;
typedef struct _MidgardCRQuerySelectIface MidgardCRQuerySelectIface;

#define MIDGARD_CR_TYPE_STORABLE (midgard_cr_storable_get_type ())
#define MIDGARD_CR_STORABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORABLE, MidgardCRStorable))
#define MIDGARD_CR_IS_STORABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORABLE))
#define MIDGARD_CR_STORABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORABLE, MidgardCRStorableIface))

typedef struct _MidgardCRStorable MidgardCRStorable;
typedef struct _MidgardCRStorableIface MidgardCRStorableIface;

#define MIDGARD_CR_TYPE_QUERY_DATA (midgard_cr_query_data_get_type ())
#define MIDGARD_CR_QUERY_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_DATA, MidgardCRQueryData))
#define MIDGARD_CR_IS_QUERY_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_DATA))
#define MIDGARD_CR_QUERY_DATA_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_DATA, MidgardCRQueryDataIface))

typedef struct _MidgardCRQueryData MidgardCRQueryData;
typedef struct _MidgardCRQueryDataIface MidgardCRQueryDataIface;

#define MIDGARD_CR_TYPE_MODEL_REFLECTOR (midgard_cr_model_reflector_get_type ())
#define MIDGARD_CR_MODEL_REFLECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_MODEL_REFLECTOR, MidgardCRModelReflector))
#define MIDGARD_CR_IS_MODEL_REFLECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_MODEL_REFLECTOR))
#define MIDGARD_CR_MODEL_REFLECTOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_MODEL_REFLECTOR, MidgardCRModelReflectorIface))

typedef struct _MidgardCRModelReflector MidgardCRModelReflector;
typedef struct _MidgardCRModelReflectorIface MidgardCRModelReflectorIface;

#define MIDGARD_CR_TYPE_MODEL (midgard_cr_model_get_type ())
#define MIDGARD_CR_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_MODEL, MidgardCRModel))
#define MIDGARD_CR_IS_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_MODEL))
#define MIDGARD_CR_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_MODEL, MidgardCRModelIface))

typedef struct _MidgardCRModel MidgardCRModel;
typedef struct _MidgardCRModelIface MidgardCRModelIface;

#define MIDGARD_CR_TYPE_MODEL_PROPERTY_REFLECTOR (midgard_cr_model_property_reflector_get_type ())
#define MIDGARD_CR_MODEL_PROPERTY_REFLECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY_REFLECTOR, MidgardCRModelPropertyReflector))
#define MIDGARD_CR_IS_MODEL_PROPERTY_REFLECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY_REFLECTOR))
#define MIDGARD_CR_MODEL_PROPERTY_REFLECTOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY_REFLECTOR, MidgardCRModelPropertyReflectorIface))

typedef struct _MidgardCRModelPropertyReflector MidgardCRModelPropertyReflector;
typedef struct _MidgardCRModelPropertyReflectorIface MidgardCRModelPropertyReflectorIface;

#define MIDGARD_CR_TYPE_MODEL_PROPERTY (midgard_cr_model_property_get_type ())
#define MIDGARD_CR_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY, MidgardCRModelProperty))
#define MIDGARD_CR_IS_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY))
#define MIDGARD_CR_MODEL_PROPERTY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_MODEL_PROPERTY, MidgardCRModelPropertyIface))

typedef struct _MidgardCRModelProperty MidgardCRModelProperty;
typedef struct _MidgardCRModelPropertyIface MidgardCRModelPropertyIface;

#define MIDGARD_CR_TYPE_OBJECT_MODEL (midgard_cr_object_model_get_type ())
#define MIDGARD_CR_OBJECT_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL, MidgardCRObjectModel))
#define MIDGARD_CR_OBJECT_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_OBJECT_MODEL, MidgardCRObjectModelClass))
#define MIDGARD_CR_IS_OBJECT_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL))
#define MIDGARD_CR_IS_OBJECT_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_OBJECT_MODEL))
#define MIDGARD_CR_OBJECT_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL, MidgardCRObjectModelClass))

typedef struct _MidgardCRObjectModel MidgardCRObjectModel;
typedef struct _MidgardCRObjectModelClass MidgardCRObjectModelClass;
typedef struct _MidgardCRObjectModelPrivate MidgardCRObjectModelPrivate;

#define MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY (midgard_cr_object_model_property_get_type ())
#define MIDGARD_CR_OBJECT_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY, MidgardCRObjectModelProperty))
#define MIDGARD_CR_OBJECT_MODEL_PROPERTY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY, MidgardCRObjectModelPropertyClass))
#define MIDGARD_CR_IS_OBJECT_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY))
#define MIDGARD_CR_IS_OBJECT_MODEL_PROPERTY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY))
#define MIDGARD_CR_OBJECT_MODEL_PROPERTY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_OBJECT_MODEL_PROPERTY, MidgardCRObjectModelPropertyClass))

typedef struct _MidgardCRObjectModelProperty MidgardCRObjectModelProperty;
typedef struct _MidgardCRObjectModelPropertyClass MidgardCRObjectModelPropertyClass;
typedef struct _MidgardCRObjectModelPropertyPrivate MidgardCRObjectModelPropertyPrivate;

#define MIDGARD_CR_TYPE_OBJECT_BUILDER (midgard_cr_object_builder_get_type ())
#define MIDGARD_CR_OBJECT_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_OBJECT_BUILDER, MidgardCRObjectBuilder))
#define MIDGARD_CR_OBJECT_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_OBJECT_BUILDER, MidgardCRObjectBuilderClass))
#define MIDGARD_CR_IS_OBJECT_BUILDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_OBJECT_BUILDER))
#define MIDGARD_CR_IS_OBJECT_BUILDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_OBJECT_BUILDER))
#define MIDGARD_CR_OBJECT_BUILDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_OBJECT_BUILDER, MidgardCRObjectBuilderClass))

typedef struct _MidgardCRObjectBuilder MidgardCRObjectBuilder;
typedef struct _MidgardCRObjectBuilderClass MidgardCRObjectBuilderClass;
typedef struct _MidgardCRObjectBuilderPrivate MidgardCRObjectBuilderPrivate;

#define MIDGARD_CR_TYPE_STORAGE_MANAGER (midgard_cr_storage_manager_get_type ())
#define MIDGARD_CR_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER, MidgardCRStorageManager))
#define MIDGARD_CR_IS_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER))
#define MIDGARD_CR_STORAGE_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER, MidgardCRStorageManagerIface))

typedef struct _MidgardCRStorageManager MidgardCRStorageManager;
typedef struct _MidgardCRStorageManagerIface MidgardCRStorageManagerIface;

#define MIDGARD_CR_TYPE_STORAGE_CONTENT_MANAGER (midgard_cr_storage_content_manager_get_type ())
#define MIDGARD_CR_STORAGE_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_CONTENT_MANAGER, MidgardCRStorageContentManager))
#define MIDGARD_CR_IS_STORAGE_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_CONTENT_MANAGER))
#define MIDGARD_CR_STORAGE_CONTENT_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_CONTENT_MANAGER, MidgardCRStorageContentManagerIface))

typedef struct _MidgardCRStorageContentManager MidgardCRStorageContentManager;
typedef struct _MidgardCRStorageContentManagerIface MidgardCRStorageContentManagerIface;

#define MIDGARD_CR_TYPE_QUERY_MANAGER (midgard_cr_query_manager_get_type ())
#define MIDGARD_CR_QUERY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_MANAGER, MidgardCRQueryManager))
#define MIDGARD_CR_IS_QUERY_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_MANAGER))
#define MIDGARD_CR_QUERY_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_QUERY_MANAGER, MidgardCRQueryManagerIface))

typedef struct _MidgardCRQueryManager MidgardCRQueryManager;
typedef struct _MidgardCRQueryManagerIface MidgardCRQueryManagerIface;

#define MIDGARD_CR_TYPE_STORAGE_EXECUTOR (midgard_cr_storage_executor_get_type ())
#define MIDGARD_CR_STORAGE_EXECUTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_EXECUTOR, MidgardCRStorageExecutor))
#define MIDGARD_CR_IS_STORAGE_EXECUTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_EXECUTOR))
#define MIDGARD_CR_STORAGE_EXECUTOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_EXECUTOR, MidgardCRStorageExecutorIface))

typedef struct _MidgardCRStorageExecutor MidgardCRStorageExecutor;
typedef struct _MidgardCRStorageExecutorIface MidgardCRStorageExecutorIface;

#define MIDGARD_CR_TYPE_STORAGE_MODEL_MANAGER (midgard_cr_storage_model_manager_get_type ())
#define MIDGARD_CR_STORAGE_MODEL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_MANAGER, MidgardCRStorageModelManager))
#define MIDGARD_CR_IS_STORAGE_MODEL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_MANAGER))
#define MIDGARD_CR_STORAGE_MODEL_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_MANAGER, MidgardCRStorageModelManagerIface))

typedef struct _MidgardCRStorageModelManager MidgardCRStorageModelManager;
typedef struct _MidgardCRStorageModelManagerIface MidgardCRStorageModelManagerIface;

#define MIDGARD_CR_TYPE_STORAGE_MODEL (midgard_cr_storage_model_get_type ())
#define MIDGARD_CR_STORAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL, MidgardCRStorageModel))
#define MIDGARD_CR_IS_STORAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL))
#define MIDGARD_CR_STORAGE_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL, MidgardCRStorageModelIface))

typedef struct _MidgardCRStorageModel MidgardCRStorageModel;
typedef struct _MidgardCRStorageModelIface MidgardCRStorageModelIface;

#define MIDGARD_CR_TYPE_TRANSACTION (midgard_cr_transaction_get_type ())
#define MIDGARD_CR_TRANSACTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_TRANSACTION, MidgardCRTransaction))
#define MIDGARD_CR_IS_TRANSACTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_TRANSACTION))
#define MIDGARD_CR_TRANSACTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_TRANSACTION, MidgardCRTransactionIface))

typedef struct _MidgardCRTransaction MidgardCRTransaction;
typedef struct _MidgardCRTransactionIface MidgardCRTransactionIface;

#define MIDGARD_CR_TYPE_STORAGE_WORKSPACE_MANAGER (midgard_cr_storage_workspace_manager_get_type ())
#define MIDGARD_CR_STORAGE_WORKSPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_WORKSPACE_MANAGER, MidgardCRStorageWorkspaceManager))
#define MIDGARD_CR_IS_STORAGE_WORKSPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_WORKSPACE_MANAGER))
#define MIDGARD_CR_STORAGE_WORKSPACE_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_WORKSPACE_MANAGER, MidgardCRStorageWorkspaceManagerIface))

typedef struct _MidgardCRStorageWorkspaceManager MidgardCRStorageWorkspaceManager;
typedef struct _MidgardCRStorageWorkspaceManagerIface MidgardCRStorageWorkspaceManagerIface;

#define MIDGARD_CR_TYPE_WORKSPACE_STORAGE (midgard_cr_workspace_storage_get_type ())
#define MIDGARD_CR_WORKSPACE_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_WORKSPACE_STORAGE, MidgardCRWorkspaceStorage))
#define MIDGARD_CR_IS_WORKSPACE_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_WORKSPACE_STORAGE))
#define MIDGARD_CR_WORKSPACE_STORAGE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_WORKSPACE_STORAGE, MidgardCRWorkspaceStorageIface))

typedef struct _MidgardCRWorkspaceStorage MidgardCRWorkspaceStorage;
typedef struct _MidgardCRWorkspaceStorageIface MidgardCRWorkspaceStorageIface;

#define MIDGARD_CR_TYPE_TIMESTAMP (midgard_cr_timestamp_get_type ())
#define MIDGARD_CR_TIMESTAMP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_TIMESTAMP, MidgardCRTimestamp))
#define MIDGARD_CR_TIMESTAMP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_TIMESTAMP, MidgardCRTimestampClass))
#define MIDGARD_CR_IS_TIMESTAMP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_TIMESTAMP))
#define MIDGARD_CR_IS_TIMESTAMP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_TIMESTAMP))
#define MIDGARD_CR_TIMESTAMP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_TIMESTAMP, MidgardCRTimestampClass))

typedef struct _MidgardCRTimestamp MidgardCRTimestamp;
typedef struct _MidgardCRTimestampClass MidgardCRTimestampClass;
typedef struct _MidgardCRTimestampPrivate MidgardCRTimestampPrivate;

#define MIDGARD_CR_TYPE_METADATA (midgard_cr_metadata_get_type ())
#define MIDGARD_CR_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_METADATA, MidgardCRMetadata))
#define MIDGARD_CR_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_METADATA, MidgardCRMetadataClass))
#define MIDGARD_CR_IS_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_METADATA))
#define MIDGARD_CR_IS_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_METADATA))
#define MIDGARD_CR_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_METADATA, MidgardCRMetadataClass))

typedef struct _MidgardCRMetadata MidgardCRMetadata;
typedef struct _MidgardCRMetadataClass MidgardCRMetadataClass;
typedef struct _MidgardCRMetadataPrivate MidgardCRMetadataPrivate;

#define MIDGARD_CR_TYPE_REPOSITORY_OBJECT (midgard_cr_repository_object_get_type ())
#define MIDGARD_CR_REPOSITORY_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_REPOSITORY_OBJECT, MidgardCRRepositoryObject))
#define MIDGARD_CR_REPOSITORY_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_REPOSITORY_OBJECT, MidgardCRRepositoryObjectClass))
#define MIDGARD_CR_IS_REPOSITORY_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_REPOSITORY_OBJECT))
#define MIDGARD_CR_IS_REPOSITORY_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_REPOSITORY_OBJECT))
#define MIDGARD_CR_REPOSITORY_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_REPOSITORY_OBJECT, MidgardCRRepositoryObjectClass))

typedef struct _MidgardCRRepositoryObject MidgardCRRepositoryObject;
typedef struct _MidgardCRRepositoryObjectClass MidgardCRRepositoryObjectClass;
typedef struct _MidgardCRRepositoryObjectPrivate MidgardCRRepositoryObjectPrivate;

#define MIDGARD_CR_TYPE_STORAGE_OBJECT (midgard_cr_storage_object_get_type ())
#define MIDGARD_CR_STORAGE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_OBJECT, MidgardCRStorageObject))
#define MIDGARD_CR_STORAGE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_STORAGE_OBJECT, MidgardCRStorageObjectClass))
#define MIDGARD_CR_IS_STORAGE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_OBJECT))
#define MIDGARD_CR_IS_STORAGE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_STORAGE_OBJECT))
#define MIDGARD_CR_STORAGE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_STORAGE_OBJECT, MidgardCRStorageObjectClass))

typedef struct _MidgardCRStorageObject MidgardCRStorageObject;
typedef struct _MidgardCRStorageObjectClass MidgardCRStorageObjectClass;
typedef struct _MidgardCRStorageObjectPrivate MidgardCRStorageObjectPrivate;

#define MIDGARD_CR_TYPE_REFERENCE_OBJECT (midgard_cr_reference_object_get_type ())
#define MIDGARD_CR_REFERENCE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_REFERENCE_OBJECT, MidgardCRReferenceObject))
#define MIDGARD_CR_REFERENCE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_REFERENCE_OBJECT, MidgardCRReferenceObjectClass))
#define MIDGARD_CR_IS_REFERENCE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_REFERENCE_OBJECT))
#define MIDGARD_CR_IS_REFERENCE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_REFERENCE_OBJECT))
#define MIDGARD_CR_REFERENCE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_REFERENCE_OBJECT, MidgardCRReferenceObjectClass))

typedef struct _MidgardCRReferenceObject MidgardCRReferenceObject;
typedef struct _MidgardCRReferenceObjectClass MidgardCRReferenceObjectClass;
typedef struct _MidgardCRReferenceObjectPrivate MidgardCRReferenceObjectPrivate;

#define MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER (midgard_cr_sql_storage_manager_get_type ())
#define MIDGARD_CR_SQL_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER, MidgardCRSQLStorageManager))
#define MIDGARD_CR_SQL_STORAGE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER, MidgardCRSQLStorageManagerClass))
#define MIDGARD_CR_IS_SQL_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER))
#define MIDGARD_CR_IS_SQL_STORAGE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER))
#define MIDGARD_CR_SQL_STORAGE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MANAGER, MidgardCRSQLStorageManagerClass))

typedef struct _MidgardCRSQLStorageManager MidgardCRSQLStorageManager;
typedef struct _MidgardCRSQLStorageManagerClass MidgardCRSQLStorageManagerClass;
typedef struct _MidgardCRSQLStorageManagerPrivate MidgardCRSQLStorageManagerPrivate;

#define MIDGARD_CR_TYPE_STORAGE_MANAGER_POOL (midgard_cr_storage_manager_pool_get_type ())
#define MIDGARD_CR_STORAGE_MANAGER_POOL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER_POOL, MidgardCRStorageManagerPool))
#define MIDGARD_CR_IS_STORAGE_MANAGER_POOL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER_POOL))
#define MIDGARD_CR_STORAGE_MANAGER_POOL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_MANAGER_POOL, MidgardCRStorageManagerPoolIface))

typedef struct _MidgardCRStorageManagerPool MidgardCRStorageManagerPool;
typedef struct _MidgardCRStorageManagerPoolIface MidgardCRStorageManagerPoolIface;

#define MIDGARD_CR_TYPE_STORAGE_MODEL_PROPERTY (midgard_cr_storage_model_property_get_type ())
#define MIDGARD_CR_STORAGE_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_PROPERTY, MidgardCRStorageModelProperty))
#define MIDGARD_CR_IS_STORAGE_MODEL_PROPERTY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_PROPERTY))
#define MIDGARD_CR_STORAGE_MODEL_PROPERTY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_STORAGE_MODEL_PROPERTY, MidgardCRStorageModelPropertyIface))

typedef struct _MidgardCRStorageModelProperty MidgardCRStorageModelProperty;
typedef struct _MidgardCRStorageModelPropertyIface MidgardCRStorageModelPropertyIface;

#define MIDGARD_CR_TYPE_WORKSPACE_CONTEXT (midgard_cr_workspace_context_get_type ())
#define MIDGARD_CR_WORKSPACE_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_WORKSPACE_CONTEXT, MidgardCRWorkspaceContext))
#define MIDGARD_CR_WORKSPACE_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_WORKSPACE_CONTEXT, MidgardCRWorkspaceContextClass))
#define MIDGARD_CR_IS_WORKSPACE_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_WORKSPACE_CONTEXT))
#define MIDGARD_CR_IS_WORKSPACE_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_WORKSPACE_CONTEXT))
#define MIDGARD_CR_WORKSPACE_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_WORKSPACE_CONTEXT, MidgardCRWorkspaceContextClass))

typedef struct _MidgardCRWorkspaceContext MidgardCRWorkspaceContext;
typedef struct _MidgardCRWorkspaceContextClass MidgardCRWorkspaceContextClass;
typedef struct _MidgardCRWorkspaceContextPrivate MidgardCRWorkspaceContextPrivate;

#define MIDGARD_CR_TYPE_WORKSPACE (midgard_cr_workspace_get_type ())
#define MIDGARD_CR_WORKSPACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_WORKSPACE, MidgardCRWorkspace))
#define MIDGARD_CR_WORKSPACE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_WORKSPACE, MidgardCRWorkspaceClass))
#define MIDGARD_CR_IS_WORKSPACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_WORKSPACE))
#define MIDGARD_CR_IS_WORKSPACE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_WORKSPACE))
#define MIDGARD_CR_WORKSPACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_WORKSPACE, MidgardCRWorkspaceClass))

typedef struct _MidgardCRWorkspace MidgardCRWorkspace;
typedef struct _MidgardCRWorkspaceClass MidgardCRWorkspaceClass;
typedef struct _MidgardCRWorkspacePrivate MidgardCRWorkspacePrivate;

#define MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER (midgard_cr_sql_workspace_manager_get_type ())
#define MIDGARD_CR_SQL_WORKSPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER, MidgardCRSQLWorkspaceManager))
#define MIDGARD_CR_SQL_WORKSPACE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER, MidgardCRSQLWorkspaceManagerClass))
#define MIDGARD_CR_IS_SQL_WORKSPACE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER))
#define MIDGARD_CR_IS_SQL_WORKSPACE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER))
#define MIDGARD_CR_SQL_WORKSPACE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_WORKSPACE_MANAGER, MidgardCRSQLWorkspaceManagerClass))

typedef struct _MidgardCRSQLWorkspaceManager MidgardCRSQLWorkspaceManager;
typedef struct _MidgardCRSQLWorkspaceManagerClass MidgardCRSQLWorkspaceManagerClass;
typedef struct _MidgardCRSQLWorkspaceManagerPrivate MidgardCRSQLWorkspaceManagerPrivate;
typedef struct _MidgardCRQueryPropertyPrivate MidgardCRQueryPropertyPrivate;

#define MIDGARD_CR_TYPE_QUERY_VALUE (midgard_cr_query_value_get_type ())
#define MIDGARD_CR_QUERY_VALUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_QUERY_VALUE, MidgardCRQueryValue))
#define MIDGARD_CR_QUERY_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_QUERY_VALUE, MidgardCRQueryValueClass))
#define MIDGARD_CR_IS_QUERY_VALUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_QUERY_VALUE))
#define MIDGARD_CR_IS_QUERY_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_QUERY_VALUE))
#define MIDGARD_CR_QUERY_VALUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_QUERY_VALUE, MidgardCRQueryValueClass))

typedef struct _MidgardCRQueryValue MidgardCRQueryValue;
typedef struct _MidgardCRQueryValueClass MidgardCRQueryValueClass;
typedef struct _MidgardCRQueryValuePrivate MidgardCRQueryValuePrivate;

#define MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER (midgard_cr_sql_storage_content_manager_get_type ())
#define MIDGARD_CR_SQL_STORAGE_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER, MidgardCRSQLStorageContentManager))
#define MIDGARD_CR_SQL_STORAGE_CONTENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER, MidgardCRSQLStorageContentManagerClass))
#define MIDGARD_CR_IS_SQL_STORAGE_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER))
#define MIDGARD_CR_IS_SQL_STORAGE_CONTENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER))
#define MIDGARD_CR_SQL_STORAGE_CONTENT_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_CONTENT_MANAGER, MidgardCRSQLStorageContentManagerClass))

typedef struct _MidgardCRSQLStorageContentManager MidgardCRSQLStorageContentManager;
typedef struct _MidgardCRSQLStorageContentManagerClass MidgardCRSQLStorageContentManagerClass;
typedef struct _MidgardCRSQLStorageContentManagerPrivate MidgardCRSQLStorageContentManagerPrivate;

#define MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER (midgard_cr_sql_storage_model_manager_get_type ())
#define MIDGARD_CR_SQL_STORAGE_MODEL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER, MidgardCRSQLStorageModelManager))
#define MIDGARD_CR_SQL_STORAGE_MODEL_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER, MidgardCRSQLStorageModelManagerClass))
#define MIDGARD_CR_IS_SQL_STORAGE_MODEL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER))
#define MIDGARD_CR_IS_SQL_STORAGE_MODEL_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER))
#define MIDGARD_CR_SQL_STORAGE_MODEL_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_STORAGE_MODEL_MANAGER, MidgardCRSQLStorageModelManagerClass))

typedef struct _MidgardCRSQLStorageModelManager MidgardCRSQLStorageModelManager;
typedef struct _MidgardCRSQLStorageModelManagerClass MidgardCRSQLStorageModelManagerClass;
typedef struct _MidgardCRSQLStorageModelManagerPrivate MidgardCRSQLStorageModelManagerPrivate;

#define MIDGARD_CR_TYPE_SQL_TABLE_MODEL (midgard_cr_sql_table_model_get_type ())
#define MIDGARD_CR_SQL_TABLE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_TABLE_MODEL, MidgardCRSQLTableModel))
#define MIDGARD_CR_SQL_TABLE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_TABLE_MODEL, MidgardCRSQLTableModelClass))
#define MIDGARD_CR_IS_SQL_TABLE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_TABLE_MODEL))
#define MIDGARD_CR_IS_SQL_TABLE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_TABLE_MODEL))
#define MIDGARD_CR_SQL_TABLE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_TABLE_MODEL, MidgardCRSQLTableModelClass))

typedef struct _MidgardCRSQLTableModel MidgardCRSQLTableModel;
typedef struct _MidgardCRSQLTableModelClass MidgardCRSQLTableModelClass;
typedef struct _MidgardCRSQLTableModelPrivate MidgardCRSQLTableModelPrivate;

#define MIDGARD_CR_TYPE_SQL_COLUMN_MODEL (midgard_cr_sql_column_model_get_type ())
#define MIDGARD_CR_SQL_COLUMN_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_COLUMN_MODEL, MidgardCRSQLColumnModel))
#define MIDGARD_CR_SQL_COLUMN_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_COLUMN_MODEL, MidgardCRSQLColumnModelClass))
#define MIDGARD_CR_IS_SQL_COLUMN_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_COLUMN_MODEL))
#define MIDGARD_CR_IS_SQL_COLUMN_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_COLUMN_MODEL))
#define MIDGARD_CR_SQL_COLUMN_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_COLUMN_MODEL, MidgardCRSQLColumnModelClass))

typedef struct _MidgardCRSQLColumnModel MidgardCRSQLColumnModel;
typedef struct _MidgardCRSQLColumnModelClass MidgardCRSQLColumnModelClass;
typedef struct _MidgardCRSQLColumnModelPrivate MidgardCRSQLColumnModelPrivate;

#define MIDGARD_CR_TYPE_SQL_QUERY_STORAGE (midgard_cr_sql_query_storage_get_type ())
#define MIDGARD_CR_SQL_QUERY_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_QUERY_STORAGE, MidgardCRSQLQueryStorage))
#define MIDGARD_CR_SQL_QUERY_STORAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_QUERY_STORAGE, MidgardCRSQLQueryStorageClass))
#define MIDGARD_CR_IS_SQL_QUERY_STORAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_QUERY_STORAGE))
#define MIDGARD_CR_IS_SQL_QUERY_STORAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_QUERY_STORAGE))
#define MIDGARD_CR_SQL_QUERY_STORAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_QUERY_STORAGE, MidgardCRSQLQueryStorageClass))

typedef struct _MidgardCRSQLQueryStorage MidgardCRSQLQueryStorage;
typedef struct _MidgardCRSQLQueryStorageClass MidgardCRSQLQueryStorageClass;
typedef struct _MidgardCRSQLQueryStoragePrivate MidgardCRSQLQueryStoragePrivate;

#define MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT (midgard_cr_sql_query_constraint_get_type ())
#define MIDGARD_CR_SQL_QUERY_CONSTRAINT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT, MidgardCRSQLQueryConstraint))
#define MIDGARD_CR_SQL_QUERY_CONSTRAINT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT, MidgardCRSQLQueryConstraintClass))
#define MIDGARD_CR_IS_SQL_QUERY_CONSTRAINT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT))
#define MIDGARD_CR_IS_SQL_QUERY_CONSTRAINT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT))
#define MIDGARD_CR_SQL_QUERY_CONSTRAINT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_QUERY_CONSTRAINT, MidgardCRSQLQueryConstraintClass))

typedef struct _MidgardCRSQLQueryConstraint MidgardCRSQLQueryConstraint;
typedef struct _MidgardCRSQLQueryConstraintClass MidgardCRSQLQueryConstraintClass;
typedef struct _MidgardCRSQLQueryConstraintPrivate MidgardCRSQLQueryConstraintPrivate;

#define MIDGARD_CR_TYPE_SQL_QUERY_SELECT (midgard_cr_sql_query_select_get_type ())
#define MIDGARD_CR_SQL_QUERY_SELECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_SQL_QUERY_SELECT, MidgardCRSQLQuerySelect))
#define MIDGARD_CR_SQL_QUERY_SELECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_SQL_QUERY_SELECT, MidgardCRSQLQuerySelectClass))
#define MIDGARD_CR_IS_SQL_QUERY_SELECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_SQL_QUERY_SELECT))
#define MIDGARD_CR_IS_SQL_QUERY_SELECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_SQL_QUERY_SELECT))
#define MIDGARD_CR_SQL_QUERY_SELECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_SQL_QUERY_SELECT, MidgardCRSQLQuerySelectClass))

typedef struct _MidgardCRSQLQuerySelect MidgardCRSQLQuerySelect;
typedef struct _MidgardCRSQLQuerySelectClass MidgardCRSQLQuerySelectClass;
typedef struct _MidgardCRSQLQuerySelectPrivate MidgardCRSQLQuerySelectPrivate;

#define MIDGARD_CR_TYPE_RDF_STORAGE_MANAGER (midgard_cr_rdf_storage_manager_get_type ())
#define MIDGARD_CR_RDF_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_RDF_STORAGE_MANAGER, MidgardCRRDFStorageManager))
#define MIDGARD_CR_IS_RDF_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_RDF_STORAGE_MANAGER))
#define MIDGARD_CR_RDF_STORAGE_MANAGER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MIDGARD_CR_TYPE_RDF_STORAGE_MANAGER, MidgardCRRDFStorageManagerIface))

typedef struct _MidgardCRRDFStorageManager MidgardCRRDFStorageManager;
typedef struct _MidgardCRRDFStorageManagerIface MidgardCRRDFStorageManagerIface;

#define MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER (midgard_cr_rdfsql_storage_manager_get_type ())
#define MIDGARD_CR_RDFSQL_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER, MidgardCRRDFSQLStorageManager))
#define MIDGARD_CR_RDFSQL_STORAGE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER, MidgardCRRDFSQLStorageManagerClass))
#define MIDGARD_CR_IS_RDFSQL_STORAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER))
#define MIDGARD_CR_IS_RDFSQL_STORAGE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER))
#define MIDGARD_CR_RDFSQL_STORAGE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_RDFSQL_STORAGE_MANAGER, MidgardCRRDFSQLStorageManagerClass))

typedef struct _MidgardCRRDFSQLStorageManager MidgardCRRDFSQLStorageManager;
typedef struct _MidgardCRRDFSQLStorageManagerClass MidgardCRRDFSQLStorageManagerClass;
typedef struct _MidgardCRRDFSQLStorageManagerPrivate MidgardCRRDFSQLStorageManagerPrivate;

#define MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER (midgard_cr_rdfsql_content_manager_get_type ())
#define MIDGARD_CR_RDFSQL_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER, MidgardCRRDFSQLContentManager))
#define MIDGARD_CR_RDFSQL_CONTENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER, MidgardCRRDFSQLContentManagerClass))
#define MIDGARD_CR_IS_RDFSQL_CONTENT_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER))
#define MIDGARD_CR_IS_RDFSQL_CONTENT_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER))
#define MIDGARD_CR_RDFSQL_CONTENT_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MIDGARD_CR_TYPE_RDFSQL_CONTENT_MANAGER, MidgardCRRDFSQLContentManagerClass))

typedef struct _MidgardCRRDFSQLContentManager MidgardCRRDFSQLContentManager;
typedef struct _MidgardCRRDFSQLContentManagerClass MidgardCRRDFSQLContentManagerClass;
typedef struct _MidgardCRRDFSQLContentManagerPrivate MidgardCRRDFSQLContentManagerPrivate;

struct _MidgardCRConfig {
	GObject parent_instance;
	MidgardCRConfigPrivate * priv;
	guint dbtype_id;
	GKeyFile* keyfile;
};

struct _MidgardCRConfigClass {
	GObjectClass parent_class;
};

typedef enum  {
	MIDGARD_CR_EXECUTABLE_ERROR_DEPENDENCE_INVALID,
	MIDGARD_CR_EXECUTABLE_ERROR_COMMAND_INVALID,
	MIDGARD_CR_EXECUTABLE_ERROR_COMMAND_INVALID_DATA,
	MIDGARD_CR_EXECUTABLE_ERROR_INTERNAL
} MidgardCRExecutableError;
#define MIDGARD_CR_EXECUTABLE_ERROR midgard_cr_executable_error_quark ()
struct _MidgardCRExecutableIface {
	GTypeInterface parent_iface;
	void (*execute) (MidgardCRExecutable* self, GError** error);
};

typedef enum  {
	MIDGARD_CR_NAMESPACE_MANAGER_ERROR_URI_INVALID,
	MIDGARD_CR_NAMESPACE_MANAGER_ERROR_URI_EXISTS,
	MIDGARD_CR_NAMESPACE_MANAGER_ERROR_ALIAS_INVALID,
	MIDGARD_CR_NAMESPACE_MANAGER_ERROR_ALIAS_EXISTS
} MidgardCRNamespaceManagerError;
#define MIDGARD_CR_NAMESPACE_MANAGER_ERROR midgard_cr_namespace_manager_error_quark ()
struct _MidgardCRNamespaceManagerIface {
	GTypeInterface parent_iface;
	gboolean (*create_uri) (MidgardCRNamespaceManager* self, const char* uri, const char* name, GError** error);
	char** (*list_names) (MidgardCRNamespaceManager* self, int* result_length1);
	char* (*get_uri_by_name) (MidgardCRNamespaceManager* self, const char* name);
	char* (*get_name_by_uri) (MidgardCRNamespaceManager* self, const char* uri);
	gboolean (*name_exists) (MidgardCRNamespaceManager* self);
	gboolean (*uri_exists) (MidgardCRNamespaceManager* self);
};

struct _MidgardCRProfilerIface {
	GTypeInterface parent_iface;
	void (*enable) (MidgardCRProfiler* self, gboolean toggle);
	void (*start) (MidgardCRProfiler* self);
	void (*end) (MidgardCRProfiler* self);
	double (*get_time) (MidgardCRProfiler* self);
	const char* (*get_command) (MidgardCRProfiler* self);
};

struct _MidgardCRSQLProfiler {
	GObject parent_instance;
	MidgardCRSQLProfilerPrivate * priv;
	char* _command;
	gboolean _enabled;
	gboolean _running;
	GTimer* _timer;
};

struct _MidgardCRSQLProfilerClass {
	GObjectClass parent_class;
};

struct _MidgardCRQueryConstraintSimpleIface {
	GTypeInterface parent_iface;
	MidgardCRQueryConstraintSimple** (*list_constraints) (MidgardCRQueryConstraintSimple* self, int* result_length1);
};

struct _MidgardCRQueryStorageIface {
	GTypeInterface parent_iface;
	const char* (*get_classname) (MidgardCRQueryStorage* self);
	void (*set_classname) (MidgardCRQueryStorage* self, const char* value);
};

struct _MidgardCRQueryValueHolderIface {
	GTypeInterface parent_iface;
	void (*get_value) (MidgardCRQueryValueHolder* self, GValue* result);
	void (*set_value) (MidgardCRQueryValueHolder* self, GValue* value);
};

struct _MidgardCRQueryConstraintIface {
	GTypeInterface parent_iface;
	MidgardCRQueryValueHolder* (*get_holder) (MidgardCRQueryConstraint* self);
	void (*set_holder) (MidgardCRQueryConstraint* self, MidgardCRQueryValueHolder* value);
	MidgardCRQueryProperty* (*get_property) (MidgardCRQueryConstraint* self);
	void (*set_property) (MidgardCRQueryConstraint* self, MidgardCRQueryProperty* value);
	MidgardCRQueryStorage* (*get_storage) (MidgardCRQueryConstraint* self);
	void (*set_storage) (MidgardCRQueryConstraint* self, MidgardCRQueryStorage* value);
	const char* (*get_operator) (MidgardCRQueryConstraint* self);
	void (*set_operator) (MidgardCRQueryConstraint* self, const char* value);
};

struct _MidgardCRQueryConstraintGroupIface {
	GTypeInterface parent_iface;
	char* (*get_group_type) (MidgardCRQueryConstraintGroup* self);
	void (*set_group_type) (MidgardCRQueryConstraintGroup* self, const char* name);
	void (*add_constraint) (MidgardCRQueryConstraintGroup* self, MidgardCRQueryConstraintSimple* constraint);
	const char* (*get_grouptype) (MidgardCRQueryConstraintGroup* self);
	void (*set_grouptype) (MidgardCRQueryConstraintGroup* self, const char* value);
};

typedef enum  {
	MIDGARD_CR_VALIDATION_ERROR_NAME_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_NAME_DUPLICATED,
	MIDGARD_CR_VALIDATION_ERROR_TYPE_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_VALUE_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_REFERENCE_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_PARENT_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_LOCATION_INVALID,
	MIDGARD_CR_VALIDATION_ERROR_INTERNAL
} MidgardCRValidationError;
#define MIDGARD_CR_VALIDATION_ERROR midgard_cr_validation_error_quark ()
struct _MidgardCRQueryExecutorIface {
	GTypeInterface parent_iface;
	void (*set_constraint) (MidgardCRQueryExecutor* self, MidgardCRQueryConstraintSimple* constraint);
	void (*set_limit) (MidgardCRQueryExecutor* self, guint limit);
	void (*set_offset) (MidgardCRQueryExecutor* self, guint offset);
	void (*add_order) (MidgardCRQueryExecutor* self, MidgardCRQueryProperty* property, const char* type);
	guint (*get_results_count) (MidgardCRQueryExecutor* self);
	void (*validate) (MidgardCRQueryExecutor* self, GError** error);
};

struct _MidgardCRStorableIface {
	GTypeInterface parent_iface;
};

struct _MidgardCRQuerySelectIface {
	GTypeInterface parent_iface;
	void (*add_join) (MidgardCRQuerySelect* self, const char* type, MidgardCRQueryProperty* left_property, MidgardCRQueryProperty* right_property);
	MidgardCRStorable** (*list_objects) (MidgardCRQuerySelect* self, int* result_length1);
	void (*toggle_read_only) (MidgardCRQuerySelect* self, gboolean toggle);
};

struct _MidgardCRQueryDataIface {
	GTypeInterface parent_iface;
	void (*add_join) (MidgardCRQueryData* self, const char* type, MidgardCRQueryProperty* left_property, MidgardCRQueryProperty* right_property);
	void (*collect_property) (MidgardCRQueryData* self, MidgardCRQueryProperty* property, MidgardCRQueryStorage* storage);
	void (*list_data) (MidgardCRQueryData* self);
};

struct _MidgardCRModelIface {
	GTypeInterface parent_iface;
	MidgardCRModel* (*add_model) (MidgardCRModel* self, MidgardCRModel* model);
	MidgardCRModel* (*get_model_by_name) (MidgardCRModel* self, const char* name);
	MidgardCRModel** (*list_models) (MidgardCRModel* self, int* result_length1);
	void (*is_valid) (MidgardCRModel* self, GError** error);
	MidgardCRModel* (*copy) (MidgardCRModel* self);
	MidgardCRModel* (*get_parent) (MidgardCRModel* self);
	void (*set_parent) (MidgardCRModel* self, MidgardCRModel* value);
	const char* (*get_namespace) (MidgardCRModel* self);
	void (*set_namespace) (MidgardCRModel* self, const char* value);
	const char* (*get_name) (MidgardCRModel* self);
	void (*set_name) (MidgardCRModel* self, const char* value);
};

struct _MidgardCRModelReflectorIface {
	GTypeInterface parent_iface;
	MidgardCRModel* (*get_model) (MidgardCRModelReflector* self);
	void (*set_model) (MidgardCRModelReflector* self, MidgardCRModel* value);
};

struct _MidgardCRModelPropertyReflectorIface {
	GTypeInterface parent_iface;
	char* (*get_typename) (MidgardCRModelPropertyReflector* self);
	GType (*get_gtype) (MidgardCRModelPropertyReflector* self);
	void (*get_default_value) (MidgardCRModelPropertyReflector* self, GValue* result);
	gboolean (*is_private) (MidgardCRModelPropertyReflector* self);
	char* (*get_description) (MidgardCRModelPropertyReflector* self);
};

struct _MidgardCRModelPropertyIface {
	GTypeInterface parent_iface;
	GType (*get_valuegtype) (MidgardCRModelProperty* self);
	const char* (*get_valuetypename) (MidgardCRModelProperty* self);
	void (*set_valuetypename) (MidgardCRModelProperty* self, const char* value);
	const char* (*get_valuedefault) (MidgardCRModelProperty* self);
	void (*set_valuedefault) (MidgardCRModelProperty* self, const char* value);
	const char* (*get_description) (MidgardCRModelProperty* self);
	void (*set_description) (MidgardCRModelProperty* self, const char* value);
	gboolean (*get_private) (MidgardCRModelProperty* self);
	void (*set_private) (MidgardCRModelProperty* self, gboolean value);
	gboolean (*get_isref) (MidgardCRModelProperty* self);
	const char* (*get_refname) (MidgardCRModelProperty* self);
	const char* (*get_reftarget) (MidgardCRModelProperty* self);
};

struct _MidgardCRObjectModel {
	GObject parent_instance;
	MidgardCRObjectModelPrivate * priv;
	guint _id;
};

struct _MidgardCRObjectModelClass {
	GObjectClass parent_class;
};

struct _MidgardCRObjectModelProperty {
	GObject parent_instance;
	MidgardCRObjectModelPropertyPrivate * priv;
	guint _id;
	gboolean _isref;
	char* _refname;
	char* _reftarget;
};

struct _MidgardCRObjectModelPropertyClass {
	GObjectClass parent_class;
};

typedef enum  {
	MIDGARD_CR_OBJECT_BUILDER_ERROR_NAME_EXISTS
} MidgardCRObjectBuilderError;
#define MIDGARD_CR_OBJECT_BUILDER_ERROR midgard_cr_object_builder_error_quark ()
struct _MidgardCRObjectBuilder {
	GObject parent_instance;
	MidgardCRObjectBuilderPrivate * priv;
	MidgardCRObjectModel** _models;
	gint _models_length1;
	gint __models_size_;
	MidgardCRObjectModel** _delayed_models;
	gint _delayed_models_length1;
	gint __delayed_models_size_;
};

struct _MidgardCRObjectBuilderClass {
	GObjectClass parent_class;
};

typedef enum  {
	MIDGARD_CR_STORAGE_MANAGER_ERROR_ACCESS_DENIED,
	MIDGARD_CR_STORAGE_MANAGER_ERROR_NAME_INVALID,
	MIDGARD_CR_STORAGE_MANAGER_ERROR_NOT_OPENED,
	MIDGARD_CR_STORAGE_MANAGER_ERROR_INTERNAL
} MidgardCRStorageManagerError;
#define MIDGARD_CR_STORAGE_MANAGER_ERROR midgard_cr_storage_manager_error_quark ()
typedef enum  {
	MIDGARD_CR_STORAGE_CONTENT_MANAGER_ERROR_OBJECT_INVALID,
	MIDGARD_CR_STORAGE_CONTENT_MANAGER_ERROR_OBJECT_DUPLICATE,
	MIDGARD_CR_STORAGE_CONTENT_MANAGER_ERROR_INTERNAL
} MidgardCRStorageContentManagerError;
#define MIDGARD_CR_STORAGE_CONTENT_MANAGER_ERROR midgard_cr_storage_content_manager_error_quark ()
struct _MidgardCRQueryManagerIface {
	GTypeInterface parent_iface;
};

struct _MidgardCRStorageContentManagerIface {
	GTypeInterface parent_iface;
	gboolean (*exists) (MidgardCRStorageContentManager* self, MidgardCRStorable* object);
	gboolean (*create) (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*update) (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*save) (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*remove) (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*purge) (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
	MidgardCRQueryManager* (*get_query_manager) (MidgardCRStorageContentManager* self);
	MidgardCRStorageManager* (*get_storage_manager) (MidgardCRStorageContentManager* self);
};

struct _MidgardCRStorageExecutorIface {
	GTypeInterface parent_iface;
	gboolean (*exists) (MidgardCRStorageExecutor* self);
	void (*prepare_create) (MidgardCRStorageExecutor* self, GError** error);
	void (*prepare_update) (MidgardCRStorageExecutor* self, GError** error);
	void (*prepare_save) (MidgardCRStorageExecutor* self, GError** error);
	void (*prepare_remove) (MidgardCRStorageExecutor* self, GError** error);
	void (*prepare_purge) (MidgardCRStorageExecutor* self, GError** error);
};

struct _MidgardCRStorageModelIface {
	GTypeInterface parent_iface;
	MidgardCRStorageManager* (*get_storagemanager) (MidgardCRStorageModel* self);
	const char* (*get_location) (MidgardCRStorageModel* self);
	void (*set_location) (MidgardCRStorageModel* self, const char* value);
};

struct _MidgardCRStorageModelManagerIface {
	GTypeInterface parent_iface;
	MidgardCRStorageModel* (*create_storage_model) (MidgardCRStorageModelManager* self, MidgardCRObjectModel* object_model, const char* location);
	MidgardCRStorageModel** (*list_storage_models) (MidgardCRStorageModelManager* self, int* result_length1);
	MidgardCRObjectModel** (*list_object_models) (MidgardCRStorageModelManager* self, int* result_length1);
	MidgardCRNamespaceManager* (*get_namespace_manager) (MidgardCRStorageModelManager* self);
	MidgardCRStorageManager* (*get_storagemanager) (MidgardCRStorageModelManager* self);
};

struct _MidgardCRTransactionIface {
	GTypeInterface parent_iface;
	gboolean (*begin) (MidgardCRTransaction* self);
	gboolean (*rollback) (MidgardCRTransaction* self);
	gboolean (*get_status) (MidgardCRTransaction* self);
	const char* (*get_name) (MidgardCRTransaction* self);
	void (*set_name) (MidgardCRTransaction* self, const char* value);
};

struct _MidgardCRWorkspaceStorageIface {
	GTypeInterface parent_iface;
	const char* (*get_path) (MidgardCRWorkspaceStorage* self);
	void (*set_path) (MidgardCRWorkspaceStorage* self, const char* value);
};

struct _MidgardCRStorageWorkspaceManagerIface {
	GTypeInterface parent_iface;
	MidgardCRWorkspaceStorage* (*get_workspace) (MidgardCRStorageWorkspaceManager* self);
	void (*set_workspace) (MidgardCRStorageWorkspaceManager* self, MidgardCRWorkspaceStorage* value);
};

struct _MidgardCRStorageManagerIface {
	GTypeInterface parent_iface;
	gboolean (*open) (MidgardCRStorageManager* self, GError** error);
	gboolean (*close) (MidgardCRStorageManager* self, GError** error);
	gboolean (*initialize_storage) (MidgardCRStorageManager* self, GError** error);
	MidgardCRStorageManager* (*fork) (MidgardCRStorageManager* self);
	MidgardCRStorageManager* (*clone) (MidgardCRStorageManager* self);
	MidgardCRStorageContentManager* (*get_content_manager) (MidgardCRStorageManager* self);
	MidgardCRStorageModelManager* (*get_model_manager) (MidgardCRStorageManager* self);
	MidgardCRProfiler* (*get_profiler) (MidgardCRStorageManager* self);
	MidgardCRTransaction* (*get_transaction) (MidgardCRStorageManager* self);
	MidgardCRStorageWorkspaceManager* (*get_workspace_manager) (MidgardCRStorageManager* self);
};

struct _MidgardCRTimestamp {
	GObject parent_instance;
	MidgardCRTimestampPrivate * priv;
};

struct _MidgardCRTimestampClass {
	GObjectClass parent_class;
};

struct _MidgardCRMetadata {
	GObject parent_instance;
	MidgardCRMetadataPrivate * priv;
};

struct _MidgardCRMetadataClass {
	GObjectClass parent_class;
	const char* (*get_parent) (MidgardCRMetadata* self);
	void (*set_parent) (MidgardCRMetadata* self, const char* value);
	guint (*get_action) (MidgardCRMetadata* self);
	MidgardCRTimestamp* (*get_created) (MidgardCRMetadata* self);
	MidgardCRTimestamp* (*get_revised) (MidgardCRMetadata* self);
};

struct _MidgardCRRepositoryObject {
	GObject parent_instance;
	MidgardCRRepositoryObjectPrivate * priv;
	char* _guid;
	gint _id;
	MidgardCRMetadata* _metadata;
	GList* _ns_properties_list;
	GList* _ns_values_list;
};

struct _MidgardCRRepositoryObjectClass {
	GObjectClass parent_class;
	void (*set_property_value) (MidgardCRRepositoryObject* self, const char* name, GValue* value);
	GValue* (*get_property_value) (MidgardCRRepositoryObject* self, const char* name);
	char** (*list_all_properties) (MidgardCRRepositoryObject* self, int* result_length1);
};

struct _MidgardCRStorageObject {
	GObject parent_instance;
	MidgardCRStorageObjectPrivate * priv;
};

struct _MidgardCRStorageObjectClass {
	GObjectClass parent_class;
};

struct _MidgardCRReferenceObject {
	GObject parent_instance;
	MidgardCRReferenceObjectPrivate * priv;
};

struct _MidgardCRReferenceObjectClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLStorageManager {
	GObject parent_instance;
	MidgardCRSQLStorageManagerPrivate * priv;
	MidgardCRSQLProfiler* _profiler;
	GObject* _cnc;
	GObject* _parser;
	MidgardCRObjectModel** _object_models;
	gint _object_models_length1;
	gint __object_models_size_;
	MidgardCRStorageModel** _storage_models;
	gint _storage_models_length1;
	gint __storage_models_size_;
	MidgardCRObjectModel* _storage_model_object_model;
	MidgardCRStorageModel* _storage_model_storage_model;
	MidgardCRObjectModel* _storage_model_property_object_model;
	MidgardCRStorageModel* _storage_model_property_storage_model;
	MidgardCRObjectModel* _object_model_object_model;
	MidgardCRStorageModel* _object_model_storage_model;
	MidgardCRObjectModel* _object_model_property_object_model;
	MidgardCRStorageModel* _object_model_property_storage_model;
	MidgardCRObjectModel* _object_model_repository_object;
	MidgardCRStorageModel* _storage_model_repository_object;
};

struct _MidgardCRSQLStorageManagerClass {
	GObjectClass parent_class;
	gboolean (*initialize_storage) (MidgardCRSQLStorageManager* self, GError** error);
};

struct _MidgardCRStorageManagerPoolIface {
	GTypeInterface parent_iface;
	void (*register_manager_type) (MidgardCRStorageManagerPool* self, const char* classname);
	MidgardCRStorageManager* (*create_manager) (MidgardCRStorageManagerPool* self, const char* classname, const char* name);
	char** (*list_managers) (MidgardCRStorageManagerPool* self, int* result_length1);
	MidgardCRStorageManager* (*get_manager_by_name) (MidgardCRStorageManagerPool* self, const char* name);
};

typedef enum  {
	MIDGARD_CR_STORAGE_MODEL_ERROR_STORAGE_INVALID,
	MIDGARD_CR_STORAGE_MODEL_ERROR_STORAGE_EXISTS,
	MIDGARD_CR_STORAGE_MODEL_ERROR_INTERNAL
} MidgardCRStorageModelError;
#define MIDGARD_CR_STORAGE_MODEL_ERROR midgard_cr_storage_model_error_quark ()
struct _MidgardCRStorageModelPropertyIface {
	GTypeInterface parent_iface;
	gboolean (*get_index) (MidgardCRStorageModelProperty* self);
	void (*set_index) (MidgardCRStorageModelProperty* self, gboolean value);
	gboolean (*get_primary) (MidgardCRStorageModelProperty* self);
	void (*set_primary) (MidgardCRStorageModelProperty* self, gboolean value);
};

typedef enum  {
	MIDGARD_CR_WORKSPACE_STORAGE_ERROR_WORKSPACE_STORAGE_ERROR_NAME_EXISTS,
	MIDGARD_CR_WORKSPACE_STORAGE_ERROR_WORKSPACE_STORAGE_ERROR_INVALID_PATH,
	MIDGARD_CR_WORKSPACE_STORAGE_ERROR_WORKSPACE_STORAGE_ERROR_OBJECT_NOT_EXISTS,
	MIDGARD_CR_WORKSPACE_STORAGE_ERROR_WORKSPACE_STORAGE_ERROR_CONTEXT_VIOLATION
} MidgardCRWorkspaceStorageError;
#define MIDGARD_CR_WORKSPACE_STORAGE_ERROR midgard_cr_workspace_storage_error_quark ()
struct _MidgardCRWorkspaceContext {
	GObject parent_instance;
	MidgardCRWorkspaceContextPrivate * priv;
};

struct _MidgardCRWorkspaceContextClass {
	GObjectClass parent_class;
};

struct _MidgardCRWorkspace {
	GObject parent_instance;
	MidgardCRWorkspacePrivate * priv;
};

struct _MidgardCRWorkspaceClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLWorkspaceManager {
	MidgardCRSQLStorageManager parent_instance;
	MidgardCRSQLWorkspaceManagerPrivate * priv;
};

struct _MidgardCRSQLWorkspaceManagerClass {
	MidgardCRSQLStorageManagerClass parent_class;
};

struct _MidgardCRQueryProperty {
	GObject parent_instance;
	MidgardCRQueryPropertyPrivate * priv;
	char* _property_name;
	MidgardCRQueryStorage* _storage;
};

struct _MidgardCRQueryPropertyClass {
	GObjectClass parent_class;
};

struct _MidgardCRQueryValue {
	GObject parent_instance;
	MidgardCRQueryValuePrivate * priv;
};

struct _MidgardCRQueryValueClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLStorageContentManager {
	GObject parent_instance;
	MidgardCRSQLStorageContentManagerPrivate * priv;
	MidgardCRSQLStorageManager* _storage_manager;
};

struct _MidgardCRSQLStorageContentManagerClass {
	GObjectClass parent_class;
	gboolean (*exists) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object);
	gboolean (*create) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*update) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*save) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*remove) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
	gboolean (*purge) (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
};

struct _MidgardCRSQLStorageModelManager {
	GObject parent_instance;
	MidgardCRSQLStorageModelManagerPrivate * priv;
	MidgardCRSQLStorageManager* _storage_manager;
	MidgardCRNamespaceManager* _ns_manager;
	MidgardCRStorageModel** _storage_models;
	gint _storage_models_length1;
	gint __storage_models_size_;
	MidgardCRObjectModel** _object_models;
	gint _object_models_length1;
	gint __object_models_size_;
	MidgardCRModel** _models;
	gint _models_length1;
	gint __models_size_;
	MidgardCRModel** _models_registered;
	gint _models_registered_length1;
	gint __models_registered_size_;
	char** _queries;
	gint _queries_length1;
	gint __queries_size_;
};

struct _MidgardCRSQLStorageModelManagerClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLTableModel {
	GObject parent_instance;
	MidgardCRSQLTableModelPrivate * priv;
	guint _id;
	MidgardCRSQLStorageManager* _storage_manager;
	MidgardCRSQLStorageModelManager* _model_manager;
};

struct _MidgardCRSQLTableModelClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLColumnModel {
	GObject parent_instance;
	MidgardCRSQLColumnModelPrivate * priv;
	guint _id;
	MidgardCRSQLStorageManager* _storage_manager;
	gboolean _isref;
	char* _refname;
	char* _reftarget;
	char* _tablename;
	char* _property_of;
};

struct _MidgardCRSQLColumnModelClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLQueryStorage {
	GObject parent_instance;
	MidgardCRSQLQueryStoragePrivate * priv;
	char* _classname;
};

struct _MidgardCRSQLQueryStorageClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLQueryConstraint {
	GObject parent_instance;
	MidgardCRSQLQueryConstraintPrivate * priv;
	MidgardCRQueryValueHolder* _holder;
	MidgardCRQueryProperty* _property;
	MidgardCRQueryStorage* _storage;
	char* _op;
	gint _op_type;
};

struct _MidgardCRSQLQueryConstraintClass {
	GObjectClass parent_class;
};

struct _MidgardCRSQLQuerySelect {
	GObject parent_instance;
	MidgardCRSQLQuerySelectPrivate * priv;
	MidgardCRStorageManager* _storage_manager;
	MidgardCRSQLQueryStorage* _query_storage;
	GObject* _core_query_select;
	MidgardCRQueryConstraintSimple* _constraint;
	guint _n_constraints;
	guint _limit;
	guint _offset;
	guint _results_count;
	GSList* _orders;
	GSList* _joins;
	GObject* _stmt;
	GObject* _resultset;
	gboolean _readonly;
};

struct _MidgardCRSQLQuerySelectClass {
	GObjectClass parent_class;
};

struct _MidgardCRRDFStorageManagerIface {
	GTypeInterface parent_iface;
	MidgardCRNamespaceManager* (*get_nsmanager) (MidgardCRRDFStorageManager* self);
};

struct _MidgardCRRDFSQLStorageManager {
	MidgardCRSQLStorageManager parent_instance;
	MidgardCRRDFSQLStorageManagerPrivate * priv;
	MidgardCRNamespaceManager* _nsmanager;
	MidgardCRObjectModel* _rdf_object_model;
	MidgardCRSQLTableModel* _rdf_table_model;
};

struct _MidgardCRRDFSQLStorageManagerClass {
	MidgardCRSQLStorageManagerClass parent_class;
};

struct _MidgardCRRDFSQLContentManager {
	MidgardCRSQLStorageContentManager parent_instance;
	MidgardCRRDFSQLContentManagerPrivate * priv;
};

struct _MidgardCRRDFSQLContentManagerClass {
	MidgardCRSQLStorageContentManagerClass parent_class;
};


GType midgard_cr_config_get_type (void) G_GNUC_CONST;
gboolean midgard_cr_config_read_configuration (MidgardCRConfig* self, const char* name, gboolean user, GError** error);
gboolean midgard_cr_config_read_configuration_at_path (MidgardCRConfig* self, const char* path, GError** error);
gboolean midgard_cr_config_read_data (MidgardCRConfig* self, const char* data, GError** error);
gboolean midgard_cr_config_save_configuration (MidgardCRConfig* self, const char* name, gboolean user, GError** error);
gboolean midgard_cr_config_save_configuration_at_path (MidgardCRConfig* self, const char* path, GError** error);
char** midgard_cr_config_list_configurations (gboolean user, int* result_length1, GError** error);
MidgardCRConfig* midgard_cr_config_copy (MidgardCRConfig* self);
MidgardCRConfig* midgard_cr_config_new (void);
MidgardCRConfig* midgard_cr_config_construct (GType object_type);
const char* midgard_cr_config_get_authtype (MidgardCRConfig* self);
void midgard_cr_config_set_authtype (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_dbname (MidgardCRConfig* self);
void midgard_cr_config_set_dbname (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_dbpass (MidgardCRConfig* self);
void midgard_cr_config_set_dbpass (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_dbtype (MidgardCRConfig* self);
void midgard_cr_config_set_dbtype (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_dbuser (MidgardCRConfig* self);
void midgard_cr_config_set_dbuser (MidgardCRConfig* self, const char* value);
guint midgard_cr_config_get_dbport (MidgardCRConfig* self);
void midgard_cr_config_set_dbport (MidgardCRConfig* self, guint value);
const char* midgard_cr_config_get_host (MidgardCRConfig* self);
void midgard_cr_config_set_host (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_logfilename (MidgardCRConfig* self);
void midgard_cr_config_set_logfilename (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_loglevel (MidgardCRConfig* self);
void midgard_cr_config_set_loglevel (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_midgardpassword (MidgardCRConfig* self);
void midgard_cr_config_set_midgardpassword (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_midgardusername (MidgardCRConfig* self);
void midgard_cr_config_set_midgardusername (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_sharedir (MidgardCRConfig* self);
void midgard_cr_config_set_sharedir (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_vardir (MidgardCRConfig* self);
void midgard_cr_config_set_vardir (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_blobdir (MidgardCRConfig* self);
void midgard_cr_config_set_blobdir (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_cachedir (MidgardCRConfig* self);
void midgard_cr_config_set_cachedir (MidgardCRConfig* self, const char* value);
const char* midgard_cr_config_get_dbdir (MidgardCRConfig* self);
void midgard_cr_config_set_dbdir (MidgardCRConfig* self, const char* value);
gboolean midgard_cr_config_get_tablecreate (MidgardCRConfig* self);
void midgard_cr_config_set_tablecreate (MidgardCRConfig* self, gboolean value);
gboolean midgard_cr_config_get_tableupdate (MidgardCRConfig* self);
void midgard_cr_config_set_tableupdate (MidgardCRConfig* self, gboolean value);
gboolean midgard_cr_config_get_testunit (MidgardCRConfig* self);
void midgard_cr_config_set_testunit (MidgardCRConfig* self, gboolean value);
GQuark midgard_cr_executable_error_quark (void);
GType midgard_cr_executable_get_type (void) G_GNUC_CONST;
void midgard_cr_executable_execute (MidgardCRExecutable* self, GError** error);
GQuark midgard_cr_namespace_manager_error_quark (void);
GType midgard_cr_namespace_manager_get_type (void) G_GNUC_CONST;
gboolean midgard_cr_namespace_manager_create_uri (MidgardCRNamespaceManager* self, const char* uri, const char* name, GError** error);
char** midgard_cr_namespace_manager_list_names (MidgardCRNamespaceManager* self, int* result_length1);
char* midgard_cr_namespace_manager_get_uri_by_name (MidgardCRNamespaceManager* self, const char* name);
char* midgard_cr_namespace_manager_get_name_by_uri (MidgardCRNamespaceManager* self, const char* uri);
gboolean midgard_cr_namespace_manager_name_exists (MidgardCRNamespaceManager* self);
gboolean midgard_cr_namespace_manager_uri_exists (MidgardCRNamespaceManager* self);
GType midgard_cr_profiler_get_type (void) G_GNUC_CONST;
void midgard_cr_profiler_enable (MidgardCRProfiler* self, gboolean toggle);
void midgard_cr_profiler_start (MidgardCRProfiler* self);
void midgard_cr_profiler_end (MidgardCRProfiler* self);
double midgard_cr_profiler_get_time (MidgardCRProfiler* self);
const char* midgard_cr_profiler_get_command (MidgardCRProfiler* self);
GType midgard_cr_sql_profiler_get_type (void) G_GNUC_CONST;
MidgardCRSQLProfiler* midgard_cr_sql_profiler_new (void);
MidgardCRSQLProfiler* midgard_cr_sql_profiler_construct (GType object_type);
GType midgard_cr_query_constraint_simple_get_type (void) G_GNUC_CONST;
MidgardCRQueryConstraintSimple** midgard_cr_query_constraint_simple_list_constraints (MidgardCRQueryConstraintSimple* self, int* result_length1);
GType midgard_cr_query_storage_get_type (void) G_GNUC_CONST;
const char* midgard_cr_query_storage_get_classname (MidgardCRQueryStorage* self);
void midgard_cr_query_storage_set_classname (MidgardCRQueryStorage* self, const char* value);
GType midgard_cr_query_value_holder_get_type (void) G_GNUC_CONST;
GType midgard_cr_query_property_get_type (void) G_GNUC_CONST;
GType midgard_cr_query_constraint_get_type (void) G_GNUC_CONST;
MidgardCRQueryValueHolder* midgard_cr_query_constraint_get_holder (MidgardCRQueryConstraint* self);
void midgard_cr_query_constraint_set_holder (MidgardCRQueryConstraint* self, MidgardCRQueryValueHolder* value);
MidgardCRQueryProperty* midgard_cr_query_constraint_get_property (MidgardCRQueryConstraint* self);
void midgard_cr_query_constraint_set_property (MidgardCRQueryConstraint* self, MidgardCRQueryProperty* value);
MidgardCRQueryStorage* midgard_cr_query_constraint_get_storage (MidgardCRQueryConstraint* self);
void midgard_cr_query_constraint_set_storage (MidgardCRQueryConstraint* self, MidgardCRQueryStorage* value);
const char* midgard_cr_query_constraint_get_operator (MidgardCRQueryConstraint* self);
void midgard_cr_query_constraint_set_operator (MidgardCRQueryConstraint* self, const char* value);
GType midgard_cr_query_constraint_group_get_type (void) G_GNUC_CONST;
char* midgard_cr_query_constraint_group_get_group_type (MidgardCRQueryConstraintGroup* self);
void midgard_cr_query_constraint_group_set_group_type (MidgardCRQueryConstraintGroup* self, const char* name);
void midgard_cr_query_constraint_group_add_constraint (MidgardCRQueryConstraintGroup* self, MidgardCRQueryConstraintSimple* constraint);
const char* midgard_cr_query_constraint_group_get_grouptype (MidgardCRQueryConstraintGroup* self);
void midgard_cr_query_constraint_group_set_grouptype (MidgardCRQueryConstraintGroup* self, const char* value);
void midgard_cr_query_value_holder_get_value (MidgardCRQueryValueHolder* self, GValue* result);
void midgard_cr_query_value_holder_set_value (MidgardCRQueryValueHolder* self, GValue* value);
GQuark midgard_cr_validation_error_quark (void);
GType midgard_cr_query_executor_get_type (void) G_GNUC_CONST;
void midgard_cr_query_executor_set_constraint (MidgardCRQueryExecutor* self, MidgardCRQueryConstraintSimple* constraint);
void midgard_cr_query_executor_set_limit (MidgardCRQueryExecutor* self, guint limit);
void midgard_cr_query_executor_set_offset (MidgardCRQueryExecutor* self, guint offset);
void midgard_cr_query_executor_add_order (MidgardCRQueryExecutor* self, MidgardCRQueryProperty* property, const char* type);
guint midgard_cr_query_executor_get_results_count (MidgardCRQueryExecutor* self);
void midgard_cr_query_executor_validate (MidgardCRQueryExecutor* self, GError** error);
GType midgard_cr_storable_get_type (void) G_GNUC_CONST;
GType midgard_cr_query_select_get_type (void) G_GNUC_CONST;
void midgard_cr_query_select_add_join (MidgardCRQuerySelect* self, const char* type, MidgardCRQueryProperty* left_property, MidgardCRQueryProperty* right_property);
MidgardCRStorable** midgard_cr_query_select_list_objects (MidgardCRQuerySelect* self, int* result_length1);
void midgard_cr_query_select_toggle_read_only (MidgardCRQuerySelect* self, gboolean toggle);
GType midgard_cr_query_data_get_type (void) G_GNUC_CONST;
void midgard_cr_query_data_add_join (MidgardCRQueryData* self, const char* type, MidgardCRQueryProperty* left_property, MidgardCRQueryProperty* right_property);
void midgard_cr_query_data_collect_property (MidgardCRQueryData* self, MidgardCRQueryProperty* property, MidgardCRQueryStorage* storage);
void midgard_cr_query_data_list_data (MidgardCRQueryData* self);
GType midgard_cr_model_get_type (void) G_GNUC_CONST;
GType midgard_cr_model_reflector_get_type (void) G_GNUC_CONST;
MidgardCRModel* midgard_cr_model_reflector_get_model (MidgardCRModelReflector* self);
GType midgard_cr_model_property_reflector_get_type (void) G_GNUC_CONST;
char* midgard_cr_model_property_reflector_get_typename (MidgardCRModelPropertyReflector* self);
GType midgard_cr_model_property_reflector_get_gtype (MidgardCRModelPropertyReflector* self);
void midgard_cr_model_property_reflector_get_default_value (MidgardCRModelPropertyReflector* self, GValue* result);
gboolean midgard_cr_model_property_reflector_is_private (MidgardCRModelPropertyReflector* self);
char* midgard_cr_model_property_reflector_get_description (MidgardCRModelPropertyReflector* self);
MidgardCRModel* midgard_cr_model_add_model (MidgardCRModel* self, MidgardCRModel* model);
MidgardCRModel* midgard_cr_model_get_model_by_name (MidgardCRModel* self, const char* name);
MidgardCRModel** midgard_cr_model_list_models (MidgardCRModel* self, int* result_length1);
void midgard_cr_model_is_valid (MidgardCRModel* self, GError** error);
MidgardCRModel* midgard_cr_model_copy (MidgardCRModel* self);
MidgardCRModel* midgard_cr_model_get_parent (MidgardCRModel* self);
void midgard_cr_model_set_parent (MidgardCRModel* self, MidgardCRModel* value);
const char* midgard_cr_model_get_namespace (MidgardCRModel* self);
void midgard_cr_model_set_namespace (MidgardCRModel* self, const char* value);
const char* midgard_cr_model_get_name (MidgardCRModel* self);
void midgard_cr_model_set_name (MidgardCRModel* self, const char* value);
GType midgard_cr_model_property_get_type (void) G_GNUC_CONST;
GType midgard_cr_model_property_get_valuegtype (MidgardCRModelProperty* self);
const char* midgard_cr_model_property_get_valuetypename (MidgardCRModelProperty* self);
void midgard_cr_model_property_set_valuetypename (MidgardCRModelProperty* self, const char* value);
const char* midgard_cr_model_property_get_valuedefault (MidgardCRModelProperty* self);
void midgard_cr_model_property_set_valuedefault (MidgardCRModelProperty* self, const char* value);
const char* midgard_cr_model_property_get_description (MidgardCRModelProperty* self);
void midgard_cr_model_property_set_description (MidgardCRModelProperty* self, const char* value);
gboolean midgard_cr_model_property_get_private (MidgardCRModelProperty* self);
void midgard_cr_model_property_set_private (MidgardCRModelProperty* self, gboolean value);
gboolean midgard_cr_model_property_get_isref (MidgardCRModelProperty* self);
const char* midgard_cr_model_property_get_refname (MidgardCRModelProperty* self);
const char* midgard_cr_model_property_get_reftarget (MidgardCRModelProperty* self);
GType midgard_cr_object_model_get_type (void) G_GNUC_CONST;
MidgardCRObjectModel* midgard_cr_object_model_new (const char* name);
MidgardCRObjectModel* midgard_cr_object_model_construct (GType object_type, const char* name);
const char* midgard_cr_object_model_get_parentname (MidgardCRObjectModel* self);
GType midgard_cr_object_model_property_get_type (void) G_GNUC_CONST;
MidgardCRObjectModelProperty* midgard_cr_object_model_property_new (const char* name, const char* type, const char* dvalue);
MidgardCRObjectModelProperty* midgard_cr_object_model_property_construct (GType object_type, const char* name, const char* type, const char* dvalue);
const char* midgard_cr_object_model_property_get_classname (MidgardCRObjectModelProperty* self);
GQuark midgard_cr_object_builder_error_quark (void);
GType midgard_cr_object_builder_get_type (void) G_GNUC_CONST;
void midgard_cr_object_builder_register_model (MidgardCRObjectBuilder* self, MidgardCRObjectModel* model, GError** error);
GQuark midgard_cr_storage_manager_error_quark (void);
GQuark midgard_cr_storage_content_manager_error_quark (void);
GType midgard_cr_query_manager_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_content_manager_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_executor_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_model_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_model_manager_get_type (void) G_GNUC_CONST;
GType midgard_cr_transaction_get_type (void) G_GNUC_CONST;
GType midgard_cr_workspace_storage_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_workspace_manager_get_type (void) G_GNUC_CONST;
GType midgard_cr_storage_manager_get_type (void) G_GNUC_CONST;
void midgard_cr_object_builder_register_storage_models (MidgardCRObjectBuilder* self, MidgardCRStorageManager* manager, GError** error);
MidgardCRStorable* midgard_cr_object_builder_factory (MidgardCRObjectBuilder* self, const char* classname, GError** error);
MidgardCRObjectModel* midgard_cr_object_builder_get_object_model (MidgardCRObjectBuilder* self, const char* classname);
MidgardCRObjectBuilder* midgard_cr_object_builder_new (void);
MidgardCRObjectBuilder* midgard_cr_object_builder_construct (GType object_type);
GType midgard_cr_timestamp_get_type (void) G_GNUC_CONST;
MidgardCRTimestamp* midgard_cr_timestamp_construct (GType object_type);
GType midgard_cr_metadata_get_type (void) G_GNUC_CONST;
MidgardCRMetadata* midgard_cr_metadata_construct (GType object_type);
const char* midgard_cr_metadata_get_parent (MidgardCRMetadata* self);
guint midgard_cr_metadata_get_action (MidgardCRMetadata* self);
MidgardCRTimestamp* midgard_cr_metadata_get_created (MidgardCRMetadata* self);
MidgardCRTimestamp* midgard_cr_metadata_get_revised (MidgardCRMetadata* self);
GType midgard_cr_repository_object_get_type (void) G_GNUC_CONST;
void midgard_cr_repository_object_set_property_value (MidgardCRRepositoryObject* self, const char* name, GValue* value);
GValue* midgard_cr_repository_object_get_property_value (MidgardCRRepositoryObject* self, const char* name);
char** midgard_cr_repository_object_list_all_properties (MidgardCRRepositoryObject* self, int* result_length1);
MidgardCRRepositoryObject* midgard_cr_repository_object_construct (GType object_type);
const char* midgard_cr_repository_object_get_guid (MidgardCRRepositoryObject* self);
guint midgard_cr_repository_object_get_id (MidgardCRRepositoryObject* self);
MidgardCRMetadata* midgard_cr_repository_object_get_metadata (MidgardCRRepositoryObject* self);
GType midgard_cr_storage_object_get_type (void) G_GNUC_CONST;
MidgardCRStorageObject* midgard_cr_storage_object_construct (GType object_type);
GType midgard_cr_reference_object_get_type (void) G_GNUC_CONST;
MidgardCRReferenceObject* midgard_cr_reference_object_new (void);
MidgardCRReferenceObject* midgard_cr_reference_object_construct (GType object_type);
const char* midgard_cr_reference_object_get_classname (MidgardCRReferenceObject* self);
const char* midgard_cr_reference_object_get_guid (MidgardCRReferenceObject* self);
void midgard_cr_reference_object_set_guid (MidgardCRReferenceObject* self, const char* value);
gint midgard_cr_reference_object_get_id (MidgardCRReferenceObject* self);
void midgard_cr_reference_object_set_id (MidgardCRReferenceObject* self, gint value);
GType midgard_cr_sql_storage_manager_get_type (void) G_GNUC_CONST;
MidgardCRSQLStorageManager* midgard_cr_sql_storage_manager_new (const char* name, MidgardCRConfig* config, GError** error);
MidgardCRSQLStorageManager* midgard_cr_sql_storage_manager_construct (GType object_type, const char* name, MidgardCRConfig* config, GError** error);
gboolean midgard_cr_sql_storage_manager_initialize_storage (MidgardCRSQLStorageManager* self, GError** error);
const char* midgard_cr_sql_storage_manager_get_name (MidgardCRSQLStorageManager* self);
MidgardCRConfig* midgard_cr_sql_storage_manager_get_config (MidgardCRSQLStorageManager* self);
gboolean midgard_cr_transaction_begin (MidgardCRTransaction* self);
gboolean midgard_cr_transaction_rollback (MidgardCRTransaction* self);
gboolean midgard_cr_transaction_get_status (MidgardCRTransaction* self);
const char* midgard_cr_transaction_get_name (MidgardCRTransaction* self);
GType midgard_cr_storage_manager_pool_get_type (void) G_GNUC_CONST;
void midgard_cr_storage_manager_pool_register_manager_type (MidgardCRStorageManagerPool* self, const char* classname);
MidgardCRStorageManager* midgard_cr_storage_manager_pool_create_manager (MidgardCRStorageManagerPool* self, const char* classname, const char* name);
char** midgard_cr_storage_manager_pool_list_managers (MidgardCRStorageManagerPool* self, int* result_length1);
MidgardCRStorageManager* midgard_cr_storage_manager_pool_get_manager_by_name (MidgardCRStorageManagerPool* self, const char* name);
gboolean midgard_cr_storage_manager_open (MidgardCRStorageManager* self, GError** error);
gboolean midgard_cr_storage_manager_close (MidgardCRStorageManager* self, GError** error);
gboolean midgard_cr_storage_manager_initialize_storage (MidgardCRStorageManager* self, GError** error);
MidgardCRStorageManager* midgard_cr_storage_manager_fork (MidgardCRStorageManager* self);
MidgardCRStorageManager* midgard_cr_storage_manager_clone (MidgardCRStorageManager* self);
MidgardCRStorageContentManager* midgard_cr_storage_manager_get_content_manager (MidgardCRStorageManager* self);
MidgardCRStorageModelManager* midgard_cr_storage_manager_get_model_manager (MidgardCRStorageManager* self);
MidgardCRProfiler* midgard_cr_storage_manager_get_profiler (MidgardCRStorageManager* self);
MidgardCRTransaction* midgard_cr_storage_manager_get_transaction (MidgardCRStorageManager* self);
MidgardCRStorageWorkspaceManager* midgard_cr_storage_manager_get_workspace_manager (MidgardCRStorageManager* self);
MidgardCRWorkspaceStorage* midgard_cr_storage_workspace_manager_get_workspace (MidgardCRStorageWorkspaceManager* self);
void midgard_cr_storage_workspace_manager_set_workspace (MidgardCRStorageWorkspaceManager* self, MidgardCRWorkspaceStorage* value);
gboolean midgard_cr_storage_executor_exists (MidgardCRStorageExecutor* self);
void midgard_cr_storage_executor_prepare_create (MidgardCRStorageExecutor* self, GError** error);
void midgard_cr_storage_executor_prepare_update (MidgardCRStorageExecutor* self, GError** error);
void midgard_cr_storage_executor_prepare_save (MidgardCRStorageExecutor* self, GError** error);
void midgard_cr_storage_executor_prepare_remove (MidgardCRStorageExecutor* self, GError** error);
void midgard_cr_storage_executor_prepare_purge (MidgardCRStorageExecutor* self, GError** error);
MidgardCRStorageModel* midgard_cr_storage_model_manager_create_storage_model (MidgardCRStorageModelManager* self, MidgardCRObjectModel* object_model, const char* location);
MidgardCRStorageModel** midgard_cr_storage_model_manager_list_storage_models (MidgardCRStorageModelManager* self, int* result_length1);
MidgardCRObjectModel** midgard_cr_storage_model_manager_list_object_models (MidgardCRStorageModelManager* self, int* result_length1);
MidgardCRNamespaceManager* midgard_cr_storage_model_manager_get_namespace_manager (MidgardCRStorageModelManager* self);
MidgardCRStorageManager* midgard_cr_storage_model_manager_get_storagemanager (MidgardCRStorageModelManager* self);
gboolean midgard_cr_storage_content_manager_exists (MidgardCRStorageContentManager* self, MidgardCRStorable* object);
gboolean midgard_cr_storage_content_manager_create (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_storage_content_manager_update (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_storage_content_manager_save (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_storage_content_manager_remove (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_storage_content_manager_purge (MidgardCRStorageContentManager* self, MidgardCRStorable* object, GError** error);
MidgardCRQueryManager* midgard_cr_storage_content_manager_get_query_manager (MidgardCRStorageContentManager* self);
MidgardCRStorageManager* midgard_cr_storage_content_manager_get_storage_manager (MidgardCRStorageContentManager* self);
GQuark midgard_cr_storage_model_error_quark (void);
MidgardCRStorageManager* midgard_cr_storage_model_get_storagemanager (MidgardCRStorageModel* self);
const char* midgard_cr_storage_model_get_location (MidgardCRStorageModel* self);
void midgard_cr_storage_model_set_location (MidgardCRStorageModel* self, const char* value);
GType midgard_cr_storage_model_property_get_type (void) G_GNUC_CONST;
gboolean midgard_cr_storage_model_property_get_index (MidgardCRStorageModelProperty* self);
void midgard_cr_storage_model_property_set_index (MidgardCRStorageModelProperty* self, gboolean value);
gboolean midgard_cr_storage_model_property_get_primary (MidgardCRStorageModelProperty* self);
void midgard_cr_storage_model_property_set_primary (MidgardCRStorageModelProperty* self, gboolean value);
GQuark midgard_cr_workspace_storage_error_quark (void);
const char* midgard_cr_workspace_storage_get_path (MidgardCRWorkspaceStorage* self);
GType midgard_cr_workspace_context_get_type (void) G_GNUC_CONST;
char** midgard_cr_workspace_context_get_workspace_names (MidgardCRWorkspaceContext* self, int* result_length1);
GType midgard_cr_workspace_get_type (void) G_GNUC_CONST;
MidgardCRWorkspace* midgard_cr_workspace_context_get_workspace_by_name (MidgardCRWorkspaceContext* self);
gboolean midgard_cr_workspace_context_has_workspace (MidgardCRWorkspaceContext* self, MidgardCRWorkspace* workspace);
MidgardCRWorkspaceContext* midgard_cr_workspace_context_new (void);
MidgardCRWorkspaceContext* midgard_cr_workspace_context_construct (GType object_type);
MidgardCRWorkspace** midgard_cr_workspace_list_children (MidgardCRWorkspace* self, int* result_length1);
MidgardCRWorkspace* midgard_cr_workspace_get_by_path (MidgardCRWorkspace* self);
MidgardCRWorkspace* midgard_cr_workspace_new (void);
MidgardCRWorkspace* midgard_cr_workspace_construct (GType object_type);
MidgardCRWorkspace* midgard_cr_workspace_get_parent (MidgardCRWorkspace* self);
void midgard_cr_workspace_set_parent (MidgardCRWorkspace* self, MidgardCRWorkspace* value);
MidgardCRWorkspaceContext* midgard_cr_workspace_get_context (MidgardCRWorkspace* self);
GType midgard_cr_sql_workspace_manager_get_type (void) G_GNUC_CONST;
gboolean midgard_cr_sql_workspace_manager_workspace_create (MidgardCRSQLWorkspaceManager* self, MidgardCRWorkspaceStorage* workspace, GError** error);
gboolean midgard_cr_sql_workspace_manager_workspace_exists (MidgardCRSQLWorkspaceManager* self, MidgardCRWorkspaceStorage* workspace, GError** error);
MidgardCRSQLWorkspaceManager* midgard_cr_sql_workspace_manager_new (const char* name, MidgardCRConfig* config);
MidgardCRSQLWorkspaceManager* midgard_cr_sql_workspace_manager_construct (GType object_type, const char* name, MidgardCRConfig* config);
MidgardCRQueryProperty* midgard_cr_query_property_new (const char* property, MidgardCRQueryStorage* storage);
MidgardCRQueryProperty* midgard_cr_query_property_construct (GType object_type, const char* property, MidgardCRQueryStorage* storage);
const char* midgard_cr_query_property_get_propertyname (MidgardCRQueryProperty* self);
void midgard_cr_query_property_set_propertyname (MidgardCRQueryProperty* self, const char* value);
MidgardCRQueryStorage* midgard_cr_query_property_get_storage (MidgardCRQueryProperty* self);
void midgard_cr_query_property_set_storage (MidgardCRQueryProperty* self, MidgardCRQueryStorage* value);
GType midgard_cr_query_value_get_type (void) G_GNUC_CONST;
MidgardCRQueryValue* midgard_cr_query_value_create_with_value (GValue* value);
MidgardCRQueryValue* midgard_cr_query_value_new (void);
MidgardCRQueryValue* midgard_cr_query_value_construct (GType object_type);
GType midgard_cr_sql_storage_content_manager_get_type (void) G_GNUC_CONST;
MidgardCRSQLStorageContentManager* midgard_cr_sql_storage_content_manager_new (MidgardCRSQLStorageManager* manager);
MidgardCRSQLStorageContentManager* midgard_cr_sql_storage_content_manager_construct (GType object_type, MidgardCRSQLStorageManager* manager);
gboolean midgard_cr_sql_storage_content_manager_exists (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object);
gboolean midgard_cr_sql_storage_content_manager_create (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_sql_storage_content_manager_update (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_sql_storage_content_manager_save (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_sql_storage_content_manager_remove (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
gboolean midgard_cr_sql_storage_content_manager_purge (MidgardCRSQLStorageContentManager* self, MidgardCRStorable* object, GError** error);
MidgardCRStorageManager* midgard_cr_sql_storage_content_manager_get_storagemanager (MidgardCRSQLStorageContentManager* self);
GType midgard_cr_sql_storage_model_manager_get_type (void) G_GNUC_CONST;
GType midgard_cr_sql_table_model_get_type (void) G_GNUC_CONST;
MidgardCRSQLTableModel* midgard_cr_sql_storage_model_manager_get_table_model_by_name (MidgardCRSQLStorageModelManager* self, const char* name);
MidgardCRObjectModel* midgard_cr_sql_storage_model_manager_get_object_model_by_name (MidgardCRSQLStorageModelManager* self, const char* name);
MidgardCRSQLStorageModelManager* midgard_cr_sql_storage_model_manager_new (void);
MidgardCRSQLStorageModelManager* midgard_cr_sql_storage_model_manager_construct (GType object_type);
MidgardCRSQLTableModel* midgard_cr_sql_table_model_new (MidgardCRSQLStorageManager* manager, const char* classname, const char* location);
MidgardCRSQLTableModel* midgard_cr_sql_table_model_construct (GType object_type, MidgardCRSQLStorageManager* manager, const char* classname, const char* location);
GType midgard_cr_sql_column_model_get_type (void) G_GNUC_CONST;
MidgardCRSQLColumnModel* midgard_cr_sql_table_model_create_model_property (MidgardCRSQLTableModel* self, const char* name, const char* location, const char* type);
MidgardCRSQLColumnModel* midgard_cr_sql_column_model_new (MidgardCRSQLStorageManager* manager, const char* name, const char* location, const char* type);
MidgardCRSQLColumnModel* midgard_cr_sql_column_model_construct (GType object_type, MidgardCRSQLStorageManager* manager, const char* name, const char* location, const char* type);
const char* midgard_cr_sql_column_model_get_tablename (MidgardCRSQLColumnModel* self);
const char* midgard_cr_sql_column_model_get_propertyof (MidgardCRSQLColumnModel* self);
GType midgard_cr_sql_query_storage_get_type (void) G_GNUC_CONST;
MidgardCRSQLQueryStorage* midgard_cr_sql_query_storage_new (const char* name);
MidgardCRSQLQueryStorage* midgard_cr_sql_query_storage_construct (GType object_type, const char* name);
GType midgard_cr_sql_query_constraint_get_type (void) G_GNUC_CONST;
MidgardCRSQLQueryConstraint* midgard_cr_sql_query_constraint_new (MidgardCRQueryProperty* property, const char* op, MidgardCRQueryValueHolder* holder, MidgardCRQueryStorage* storage);
MidgardCRSQLQueryConstraint* midgard_cr_sql_query_constraint_construct (GType object_type, MidgardCRQueryProperty* property, const char* op, MidgardCRQueryValueHolder* holder, MidgardCRQueryStorage* storage);
GType midgard_cr_sql_query_select_get_type (void) G_GNUC_CONST;
MidgardCRSQLQuerySelect* midgard_cr_sql_query_select_new (MidgardCRStorageManager* manager, MidgardCRSQLQueryStorage* storage);
MidgardCRSQLQuerySelect* midgard_cr_sql_query_select_construct (GType object_type, MidgardCRStorageManager* manager, MidgardCRSQLQueryStorage* storage);
MidgardCRStorageManager* midgard_cr_sql_query_select_get_storagemanager (MidgardCRSQLQuerySelect* self);
MidgardCRSQLQueryStorage* midgard_cr_sql_query_select_get_storage (MidgardCRSQLQuerySelect* self);
gboolean midgard_cr_sql_query_select_get_readonly (MidgardCRSQLQuerySelect* self);
void midgard_cr_sql_query_select_set_readonly (MidgardCRSQLQuerySelect* self, gboolean value);
GType midgard_cr_rdf_storage_manager_get_type (void) G_GNUC_CONST;
MidgardCRNamespaceManager* midgard_cr_rdf_storage_manager_get_nsmanager (MidgardCRRDFStorageManager* self);
GType midgard_cr_rdfsql_storage_manager_get_type (void) G_GNUC_CONST;
MidgardCRRDFSQLStorageManager* midgard_cr_rdfsql_storage_manager_new (const char* name, MidgardCRConfig* config, GError** error);
MidgardCRRDFSQLStorageManager* midgard_cr_rdfsql_storage_manager_construct (GType object_type, const char* name, MidgardCRConfig* config, GError** error);
GType midgard_cr_rdfsql_content_manager_get_type (void) G_GNUC_CONST;
MidgardCRRDFSQLContentManager* midgard_cr_rdfsql_content_manager_new (MidgardCRSQLStorageManager* manager);
MidgardCRRDFSQLContentManager* midgard_cr_rdfsql_content_manager_construct (GType object_type, MidgardCRSQLStorageManager* manager);


G_END_DECLS

#endif
